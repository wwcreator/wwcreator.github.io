<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on 户枢不蠹</title>
    <link>https://wwcreator.github.io/categories/blog/</link>
    <description>Recent content in Blog on 户枢不蠹</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>yuwen_qing@126.com (wwcreator)</managingEditor>
    <webMaster>yuwen_qing@126.com (wwcreator)</webMaster>
    <copyright>(c) 2017 wwcreator.</copyright>
    <lastBuildDate>Wed, 22 Feb 2017 13:16:48 -0800</lastBuildDate>
    <atom:link href="https://wwcreator.github.io/categories/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>博客园迁移到Hugo</title>
      <link>https://wwcreator.github.io/2017/02/22/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E8%BF%81%E7%A7%BB%E5%88%B0hugo/</link>
      <pubDate>Wed, 22 Feb 2017 13:16:48 -0800</pubDate>
      <author>yuwen_qing@126.com (wwcreator)</author>
      <guid>https://wwcreator.github.io/2017/02/22/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E8%BF%81%E7%A7%BB%E5%88%B0hugo/</guid>
      <description>

&lt;p&gt;对于早期的很多用户来说，一直在博客园上写自己的博文，但是慢慢的，大家开始都有自己的专属 Blog 了，那之前的 Post 肿么办呢？&lt;/p&gt;

&lt;p&gt;来，我教你。&lt;/p&gt;

&lt;h2 id=&#34;备份博客园数据:8480fb8dece3f835b0e0e52af9ea4e0a&#34;&gt;备份博客园数据&lt;/h2&gt;

&lt;p&gt;备份这件小事，应该难不倒你，但是博客园有限制，工作日在「08:00-18:00」,不能备份，所以备份需要挑时间的喔。备份生成的是一份 XML 格式的文件，下一步，continue 。&lt;/p&gt;

&lt;h3 id=&#34;解析-xml-文件的内容:8480fb8dece3f835b0e0e52af9ea4e0a&#34;&gt;解析 XML 文件的内容&lt;/h3&gt;

&lt;h4 id=&#34;注意:8480fb8dece3f835b0e0e52af9ea4e0a&#34;&gt;注意：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;备份的 XML 没有美化成标准的 XML 格式，所以需要去网站上搜索进行 XML 格式美化再保存替换。&lt;/li&gt;
&lt;li&gt;博文的内容被 &lt;code&gt;&amp;lt;![CDATA[&lt;/code&gt; &lt;code&gt;]]&lt;/code&gt; 包含，如果不指定获取所有内容参数，则会被解析忽略。&lt;/li&gt;
&lt;li&gt;生成 MD 文档 front matter 为 TOML 格式。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面看姐的代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# -*- coding: utf-8 -*-

import os
from xml.dom.minidom import parse
import sys
reload(sys)
sys.setdefaultencoding(&#39;utf-8&#39;)

BACKUP_FILE = &#39;CNBlogs_BlogBackup_131_201602_201702_2.xml&#39;
DOMTree = parse(BACKUP_FILE)
root = DOMTree.documentElement
blog_title = root.getElementsByTagName(&#39;title&#39;)[0].childNodes[0].data
if not os.path.isdir(blog_title):
    os.mkdir(blog_title)

blogs = root.getElementsByTagName(&#39;item&#39;)

tag = [&#39;算法&#39;,&#39;C++&#39;, &#39;git&#39;, &#39;GPU&#39;, &#39;驾驶&#39;, &#39;DL&#39;, &#39;TORCS&#39;, &#39;服务器&#39; ,&#39;codility&#39; ,&#39;编译器&#39; ,&#39;python&#39; ,&#39;机器&#39;,&#39;强化&#39;,&#39;配置&#39;,&#39;ubuntu&#39;]


for blog in blogs:
    try:
        title = blog.getElementsByTagName(&#39;title&#39;)[0].childNodes[0].data
        origin_link = blog.getElementsByTagName(&#39;link&#39;)[0].childNodes[0].data
        date = blog.getElementsByTagName(&#39;pubDate&#39;)[0].childNodes[0].data
        # content = blog.getElementsByTagName(&#39;description&#39;)[0].childNodes[0].data
        content = blog.getElementsByTagName(&#39;description&#39;)[0].firstChild.wholeText
        #categories
        for test in tag:
            if title.find(test) != -1:
                categories = test
                break
            else:
                categories = &#39;Life&#39;
        with open(blog_title + os.sep + title + &#39;.md&#39;, &#39;w&#39;) as f:
            f.write(&#39;+++ \n&#39;)
            f.write(&#39;title = &amp;quot;%s&amp;quot; \n&#39; % title)
            f.write(&#39;date = &amp;quot;%s&amp;quot; \n&#39; % date)
            f.write(&#39;categories = [&amp;quot;%s&amp;quot;] \n&#39; % categories)
            f.write(&#39;+++ \n&#39;)
            f.write(content)
            f.write(&#39;\n\n&#39;)
            f.close()
    except Exception, e:
        print e
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行该脚本，会生成所有的博文。拷贝到 Hugo 的content/post/ 目录，在本地预览效果吧，如果没有问题就 &lt;code&gt;Push&lt;/code&gt; 到 &lt;code&gt;Github&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;结束语:8480fb8dece3f835b0e0e52af9ea4e0a&#34;&gt;结束语&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;使用这样是获取不到数据：&lt;code&gt;content = blog.getElementsByTagName(&#39;description&#39;)[0].childNodes[0].data&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;需要使用 wholeText 来读取&lt;code&gt;&amp;lt;![CDATA[&lt;/code&gt; &lt;code&gt;]]&lt;/code&gt;里的内容。
&lt;code&gt;content = blog.getElementsByTagName(&#39;description&#39;)[0].firstChild.wholeText&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 搭建博客注意事项</title>
      <link>https://wwcreator.github.io/2017/02/22/hugo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</link>
      <pubDate>Wed, 22 Feb 2017 12:11:48 -0800</pubDate>
      <author>yuwen_qing@126.com (wwcreator)</author>
      <guid>https://wwcreator.github.io/2017/02/22/hugo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</guid>
      <description>

&lt;h2 id=&#34;标题不能使用-号:e3d4e8203f1f66ba4b5837ed21246063&#34;&gt;标题不能使用 + 号&lt;/h2&gt;

&lt;p&gt;在v0.18 mac 版本中，如果 &lt;code&gt;title&lt;/code&gt; 包含 &lt;code&gt;+&lt;/code&gt; ，虽然不报任何错误，但是不会生成具体的静态页面。&lt;/p&gt;

&lt;h2 id=&#34;google-baidu-完全搜索不到博文:e3d4e8203f1f66ba4b5837ed21246063&#34;&gt;google，baidu 完全搜索不到博文&lt;/h2&gt;

&lt;p&gt;因为google，baidu 还没有收录我们的URL，所以在google 里输入：site:网址URL 如果能搜索出来则说明，google 已经添加我们的网址。不能则需要提交网址到 google。百度同理。
&lt;a href=&#34;https://www.google.com/webmasters/tools/home&#34;&gt;https://www.google.com/webmasters/tools/home&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;hugo-不支持站内搜索:e3d4e8203f1f66ba4b5837ed21246063&#34;&gt;Hugo 不支持站内搜索&lt;/h2&gt;

&lt;h2 id=&#34;hugo-还不支持生成目录树:e3d4e8203f1f66ba4b5837ed21246063&#34;&gt;Hugo 还不支持生成目录树&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>定制主题 &amp; hyde-y</title>
      <link>https://wwcreator.github.io/2017/02/22/%E5%AE%9A%E5%88%B6%E4%B8%BB%E9%A2%98--hyde-y/</link>
      <pubDate>Wed, 22 Feb 2017 10:11:48 -0800</pubDate>
      <author>yuwen_qing@126.com (wwcreator)</author>
      <guid>https://wwcreator.github.io/2017/02/22/%E5%AE%9A%E5%88%B6%E4%B8%BB%E9%A2%98--hyde-y/</guid>
      <description>

&lt;p&gt;在前面的&lt;a href=&#34;https://wwcreator.github.io/2017/02/14/%E4%BD%BF%E7%94%A8-hugo--github-page-%E6%90%AD%E5%BB%BA-blog/&#34;&gt;「使用 Hugo + GitHub Page 搭建 Blog」&lt;/a&gt; 文章中详细的说明搭建blog 的组成元素，「hugo」,「GitHub Page」,[Theme]，这篇文章是前面文章的续写，聊聊更改主题样式这件事。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hyde-y/
├── archetypes
│   └── default.md
├── data
│   ├── Formats.yaml
│   ├── Modules.toml
│   └── Strings.yaml
├── Gruntfile.js
├── images
│   ├── screenshot.png
│   └── tn.png
├── layouts
│   ├── 404.html
│   ├── code
│   │   ├── section.li.html
│   │   ├── single.hat.html
│   │   └── summary.hat.html
│   ├── _default
│   │   ├── list.html
│   │   ├── list.li.html
│   │   ├── section.html
│   │   ├── section.li.html
│   │   ├── single.boot.html
│   │   ├── single.content.html
│   │   ├── single.hat.html
│   │   ├── single.html
│   │   ├── summary.boot.html
│   │   ├── summary.content.html
│   │   ├── summary.hat.html
│   │   ├── summary.html
│   │   └── terms.html
│   ├── index.html
│   ├── partials
│   │   ├── base
│   │   │   ├── footer.html
│   │   │   ├── header.html
│   │   │   ├── imports.html
│   │   │   ├── metas.html
│   │   │   └── scripts.html
│   │   ├── bloc
│   │   │   ├── content
│   │   │   │   ├── badges.html
│   │   │   │   ├── comments.html
│   │   │   │   ├── content.html
│   │   │   │   ├── h1-link-title.html
│   │   │   │   ├── h1-title.html
│   │   │   │   ├── h2-link-title.html
│   │   │   │   ├── h2-title.html
│   │   │   │   ├── lastupdate.html
│   │   │   │   ├── link-title.html
│   │   │   │   ├── metas.html
│   │   │   │   ├── navigation.html
│   │   │   │   ├── pagination.html
│   │   │   │   ├── readlink.html
│   │   │   │   └── summary.html
│   │   │   ├── footer
│   │   │   │   ├── credits_copyright.html
│   │   │   │   ├── credits_footline.html
│   │   │   │   ├── credits.html
│   │   │   │   └── nav.html
│   │   │   └── header
│   │   │       ├── brand.html
│   │   │       ├── brand_title.html
│   │   │       ├── brand_topline.html
│   │   │       ├── nav.html
│   │   │       ├── nav_primary.html
│   │   │       └── nav_secondary.html
│   │   ├── error-404.html
│   │   ├── footer-extra.html
│   │   ├── foot-extra.html
│   │   ├── foot.html
│   │   ├── header-extra.html
│   │   ├── head-extra.html
│   │   ├── head.html
│   │   ├── homepage.html
│   │   └── modules
│   │       ├── disqus.html
│   │       ├── flattr.html
│   │       ├── github-ribbon.html
│   │       ├── hugo-version.html
│   │       ├── page
│   │       │   ├── badges.html
│   │       │   ├── date.html
│   │       │   ├── labels.html
│   │       │   ├── link
│   │       │   │   ├── read.html
│   │       │   │   └── title.html
│   │       │   ├── navigation.html
│   │       │   ├── summary.html
│   │       │   ├── tags.html
│   │       │   └── title.html
│   │       └── site
│   │           ├── brand.html
│   │           ├── copyright.html
│   │           ├── footline.html
│   │           ├── lastupdate.html
│   │           ├── link
│   │           │   ├── base.html
│   │           │   ├── footmenu.html
│   │           │   ├── home.html
│   │           │   ├── menu.html
│   │           │   ├── social
│   │           │   │   ├── bitbucket.html
│   │           │   │   ├── email.html
│   │           │   │   ├── facebook.html
│   │           │   │   ├── flickr.html
│   │           │   │   ├── github.html
│   │           │   │   ├── googleplus.html
│   │           │   │   ├── linkedin.html
│   │           │   │   ├── rss.html
│   │           │   │   ├── twitch.html
│   │           │   │   ├── twitter.html
│   │           │   │   ├── vimeo.html
│   │           │   │   └── youtube.html
│   │           │   ├── social.html
│   │           │   └── top.html
│   │           ├── pagination.html
│   │           └── topline.html
│   ├── post
│   │   ├── single.boot.html
│   │   ├── single.hat.html
│   │   ├── summary.boot.html
│   │   └── summary.hat.html
│   ├── section
│   │   └── code.html
│   ├── shortcodes
│   │   ├── alert.html
│   │   └── labels.html
│   └── taxonomy
│       ├── topic.html
│       └── topic.terms.html
├── LICENSE
├── package.json
├── README.md
├── scss
│   ├── _00-config.less
│   ├── _01-base.less
│   ├── _02-layout.less
│   ├── _03-modules.less
│   ├── _04-themes.less
│   ├── _05-alerts.less
│   ├── knacss
│   │   ├── _00-config.less
│   │   ├── _01a-normalize.less
│   │   ├── _01b-base.less
│   │   ├── _02-layout.less
│   │   ├── _03-grids.less
│   │   ├── _04-tables.less
│   │   ├── _05-forms.less
│   │   ├── _06-helpers.less
│   │   ├── _07-responsive.less
│   │   ├── _08-print.less
│   │   ├── _09-misc.less
│   │   ├── _10-styling.less
│   │   ├── _11-wordpress.less
│   │   └── knacss.less
│   └── style.less
├── static
│   ├── css
│   │   ├── font-awesome.min.css
│   │   ├── highlight
│   │   │   ├── arta.css
│   │   │   ├── ascetic.css
│   │   │   ├── atelier-dune.dark.css
│   │   │   ├── atelier-dune.light.css
│   │   │   ├── atelier-forest.dark.css
│   │   │   ├── atelier-forest.light.css
│   │   │   ├── atelier-heath.dark.css
│   │   │   ├── atelier-heath.light.css
│   │   │   ├── atelier-lakeside.dark.css
│   │   │   ├── atelier-lakeside.light.css
│   │   │   ├── atelier-seaside.dark.css
│   │   │   ├── atelier-seaside.light.css
│   │   │   ├── codepen-embed.css
│   │   │   ├── color-brewer.css
│   │   │   ├── dark.css
│   │   │   ├── default.css
│   │   │   ├── docco.css
│   │   │   ├── far.css
│   │   │   ├── foundation.css
│   │   │   ├── github.css
│   │   │   ├── googlecode.css
│   │   │   ├── hybrid.css
│   │   │   ├── idea.css
│   │   │   ├── ir_black.css
│   │   │   ├── kimbie.dark.css
│   │   │   ├── kimbie.light.css
│   │   │   ├── magula.css
│   │   │   ├── mono-blue.css
│   │   │   ├── monokai.css
│   │   │   ├── monokai_sublime.css
│   │   │   ├── obsidian.css
│   │   │   ├── paraiso.dark.css
│   │   │   ├── paraiso.light.css
│   │   │   ├── railscasts.css
│   │   │   ├── rainbow.css
│   │   │   ├── solarized_dark.css
│   │   │   ├── solarized_light.css
│   │   │   ├── sunburst.css
│   │   │   ├── tomorrow.css
│   │   │   ├── tomorrow-night-blue.css
│   │   │   ├── tomorrow-night-bright.css
│   │   │   ├── tomorrow-night.css
│   │   │   ├── tomorrow-night-eighties.css
│   │   │   ├── vs.css
│   │   │   ├── xcode.css
│   │   │   └── zenburn.css
│   │   └── style.css
│   ├── favicon.png
│   ├── fonts
│   │   ├── FontAwesome.otf
│   │   ├── fontawesome-webfont.eot
│   │   ├── fontawesome-webfont.svg
│   │   ├── fontawesome-webfont.ttf
│   │   ├── fontawesome-webfont.woff
│   │   └── fontawesome-webfont.woff2
│   ├── github-icon.png
│   ├── icon_new.jpg
│   ├── icon.png
│   ├── js
│   │   └── highlight.pack.js
│   ├── touch-icon-144-precomposed.png
│   └── we3.png
└── theme.toml

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;而我们主题的样式修改主要更改的文件有：「style.css」、 「layouts」。
&lt;img src=&#34;https://wwcreator.github.io/media/hyde-y-1.PNG&#34; alt=&#34;hyde-y-before&#34; /&gt;
&lt;strong&gt;修改后:&lt;/strong&gt;
&lt;img src=&#34;https://wwcreator.github.io/media/hyde-y-2.PNG&#34; alt=&#34;hyde-y-after&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;更改背景色为黑色:4842e6ac433cf262b3cd97278863004f&#34;&gt;更改背景色为黑色：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;.main_wrapper&amp;gt;.main_header {
    background-color: #2053AB;
    font-family: Raleway,&amp;quot;Open Sans&amp;quot;,Arial,sans-serif;
    color: #8CB4EC;
    text-align: center
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;变更为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.main_wrapper&amp;gt;.main_header {
    background-color: #212121;
    font-family: Raleway,&amp;quot;Open Sans&amp;quot;,Arial,sans-serif;
    color: #8CB4EC;
    text-align: center
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;更改字体为-御納户-色:4842e6ac433cf262b3cd97278863004f&#34;&gt;更改字体为「御納户」色&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://nipponcolors.com/#onando&#34;&gt;Nippon Color&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a {
    background-color: transparent;
    color: #09c
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;变更为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a {
    background-color: transparent;
    color: #0C4842
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;更改hover为黑色:4842e6ac433cf262b3cd97278863004f&#34;&gt;更改hover为黑色&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;.main_wrapper&amp;gt;.main_content .label:hover,.main_wrapper&amp;gt;.main_content .navigation a:hover,.main_wrapper&amp;gt;.main_content .pagination a:hover,.main_wrapper&amp;gt;.main_content .readlink a:hover,.main_wrapper&amp;gt;.main_content h2 a:hover,.main_wrapper&amp;gt;.main_header a:hover {
    background-color: #2053AB;
    color: #fff;
    text-decoration: none
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;.main_wrapper&amp;gt;.main_content .label:hover,.main_wrapper&amp;gt;.main_content .navigation a:hover,.main_wrapper&amp;gt;.main_content .pagination a:hover,.main_wrapper&amp;gt;.main_content .readlink a:hover,.main_wrapper&amp;gt;.main_content h2 a:hover,.main_wrapper&amp;gt;.main_header a:hover {
    background-color: #212121;
    color: #fff;
    text-decoration: none
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上是对主题的一些样式变更的例子，起到抛砖引玉的作用，希望你自己能根据要求调出想要的效果。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugo 添加站点统计信息</title>
      <link>https://wwcreator.github.io/2017/02/21/hugo-%E6%B7%BB%E5%8A%A0%E7%AB%99%E7%82%B9%E7%BB%9F%E8%AE%A1%E4%BF%A1%E6%81%AF/</link>
      <pubDate>Tue, 21 Feb 2017 10:14:48 -0800</pubDate>
      <author>yuwen_qing@126.com (wwcreator)</author>
      <guid>https://wwcreator.github.io/2017/02/21/hugo-%E6%B7%BB%E5%8A%A0%E7%AB%99%E7%82%B9%E7%BB%9F%E8%AE%A1%E4%BF%A1%E6%81%AF/</guid>
      <description>

&lt;p&gt;作为一个 Blog 的维护者，当然希望了解站点的统计信息，PV,UV，每个页面的阅读量等，但是 Hugo 主题相对于 Jkyll 少很多，插件也不及等。怎么统计呢？&lt;/p&gt;

&lt;h3 id=&#34;busuanzi-页面计数器:17e4215a535b0868fb863432b24a2d26&#34;&gt;busuanzi 页面计数器&lt;/h3&gt;

&lt;p&gt;在阅读一些 Blog 后，发现页面有展示统计信息的很少，Google 一番，发现一个非常简单方便的工具 &lt;a href=&#34;http://ibruce.info/2015/04/04/busuanzi/&#34;&gt;不蒜子&lt;/a&gt; .&lt;/p&gt;

&lt;h3 id=&#34;针对-hyde-y-主题添加页面计数器:17e4215a535b0868fb863432b24a2d26&#34;&gt;针对 hyde-y 主题添加页面计数器&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;添加 header 信息&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;vi &lt;code&gt;hyde-y/layouts/partials/head.html&lt;/code&gt; 在 head 中添加以下 script 代码。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script async src=&amp;quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&amp;quot;&amp;gt;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;添加站点PV,UV&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;vi &lt;code&gt;hyde-y/layouts/partials/bloc/content/lastupdate.html&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;amp;nbsp;&amp;amp;nbsp;
&amp;lt;span id=&amp;quot;busuanzi_container_site_pv&amp;quot;&amp;gt;
    Pv:&amp;lt;span id=&amp;quot;busuanzi_value_site_pv&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;次
&amp;lt;/span&amp;gt;
&amp;amp;nbsp;
&amp;lt;span id=&amp;quot;busuanzi_container_site_uv&amp;quot;&amp;gt;
  Uv:&amp;lt;span id=&amp;quot;busuanzi_value_site_uv&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;次
&amp;lt;/span&amp;gt;
&amp;lt;/div&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;展示效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wwcreator.github.io/media/site-pv.PNG&#34; alt=&#34;site-pv&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;添加页面PV&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;vi &lt;code&gt;hyde-y/layouts/partials/bloc/content/metas.html&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;amp;nbsp;&amp;amp;nbsp;
&amp;lt;span id=&amp;quot;busuanzi_container_page_pv&amp;quot;&amp;gt;
  本文总阅读量&amp;lt;span id=&amp;quot;busuanzi_value_page_pv&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;次
&amp;lt;/span&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;展示效果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://wwcreator.github.io/media/page-pv.PNG&#34; alt=&#34;page-pv&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;结束语:17e4215a535b0868fb863432b24a2d26&#34;&gt;结束语&lt;/h3&gt;

&lt;p&gt;根据自己的审美，功能来定制主题，首先需要对主题的结构，调用等信息清楚，然后再添加自己的改动。对了，如果大家有 Hugo 的站内搜索功能实现的，务必留言哈。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>